name: Lint, Test, Build and Install

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python "3.11"
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --select=E9,F63,F7,F82
          # exit-zero treats all errors as warnings.
          flake8 . --exit-zero

      - name: PyLint
        # https://github.com/marketplace/actions/pylint-with-dynamic-badge
        uses: Silleellie/pylint-github-action@v2.1
        with:
          lint-path: src  # lint src package
          python-version: 3.11  # python version which will lint the package
          pylintrc-path: .pylintrc

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install pytest pytest-cov
          pip install -e ../python-mdmenu/

      - name: Run tests
        run: pytest --cov --junitxml=junit.xml -o junit_family=legacy

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Test install as wheel
        run: |
          pip install dist/mdmenu-*.whl
          pip uninstall -y mdmenu

      - name: Test install archive
        run: |
          pip install dist/mdmenu-*.tar.gz
          pip uninstall -y mdmenu
